---
import { getCollection } from "astro:content";
import MarkdownPostLayout from "../../../layouts/MarkdownPostLayout.astro";
import { languages } from "../../../i18n/ui";
import {
  filterPostsForLang,
  otherLanguage,
  getPostsByLang,
} from "../../../i18n/utils";

export async function getStaticPaths() {
  const supportedLanguages = Object.keys(languages);
  const blogPosts = await getCollection("posts");

  const paths = supportedLanguages
    .map((selectedLang: string) => {
      return filterPostsForLang(blogPosts, selectedLang).map((post) => {
        const [, ...slug] = post.slug.split("/");
        const lang = selectedLang;
        const langSlug = slug.join("/") || undefined;

        // get slug for translated blog posts
        const otherLang = otherLanguage(lang);
        const postsByLang = getPostsByLang(blogPosts);
        let fullOtherLangSlug = [otherLang, "ecommerce-insights", ...slug];
        // If the post has a translation in the other language, overwrite with that slug
        if (post.data.id === postsByLang[post.data.id]?.[otherLang]?.data.id) {
          const [, ...otherLangSlugArr] =
            postsByLang[post.data.id][otherLang].slug.split("/");
          fullOtherLangSlug = [
            otherLang,
            "ecommerce-insights",
            ...otherLangSlugArr,
          ];
        }
        const otherLangPath = fullOtherLangSlug.join("/");

        return {
          params: {
            lang,
            slug: langSlug,
          },
          props: {
            post,
            otherLangPath: otherLangPath,
          },
        };
      });
    })
    .flatMap((path) => path);

  return paths;
}

const { lang, slug } = Astro.params;
const { post, otherLangPath } = Astro.props;
const { Content } = await post.render();

// TODO add a google translate button for blog posts, where ther is no translation available: https://www.geeksforgeeks.org/add-google-translate-button-webpage/
---

<MarkdownPostLayout
  frontmatter={post.data}
  lang={lang}
  langSwitchPath={otherLangPath}
>
  <Content />
</MarkdownPostLayout>
