---
import { languages } from "../../../../i18n/ui";
import { filterPostsForLang, otherLanguage } from "../../../../i18n/utils";
import { getCollection } from "astro:content";

import BaseLayout from "../../../../layouts/BaseLayout.astro";
import BlogPostLi from "../../../../components/BlogPostLi.astro";

export async function getStaticPaths() {
  const langKeys = Object.keys(languages);

  const allPosts = await getCollection("posts");

  const uniqueTags = [
    ...new Set(allPosts.map((post: any) => post.data.tags).flat()),
  ];

  return langKeys
    .map((lk) => {
      return uniqueTags.map((tag) => {
        const filteredPosts = filterPostsForLang(allPosts, lk).filter(
          (post: any) => post.data.tags?.includes(tag)
        );
        const otherLang = otherLanguage(lk);
        return {
          params: {
            lang: lk,
            tag,
          },
          props: {
            posts: filteredPosts,
            otherLangPath: `${otherLang}/ecommerce-insights/tags/${tag}`,
          },
        };
      });
    })
    .flatMap((x) => x);
}

let baseUrl = import.meta.env.BASE_URL;

const { lang, tag } = Astro.params;
const { otherLangPath, posts } = Astro.props;
---

<BaseLayout lang={lang} langSwitchPath={otherLangPath} pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map((post) => {
        const postLang = post.id.split("/")[0];
        const postSlagNoLang = post.slug.split("/")[1];
        return (
          <BlogPostLi
            url={`${baseUrl}/${lang}/ecommerce-insights/${postSlagNoLang}`}
            title={`${post.data.title} - ${postLang.toUpperCase()}`}
          />
        );
      })
    }
  </ul>
</BaseLayout>
